Query:
    type: object
    config:
        description: "Allow to query all the entities stored."
        fields:
            image:
                type: "[Image]"
                description: "Allow to fetch an Image using his identifier (not mandatory !), if omitted, all the Images are returned."
                args:
                    id:
                        type: "Int"
                        description: "The identifier of the Image"
                resolve: "@=resolver('image_resolver', [args])"
            user:
                type: "[User]"
                description: "Allow to fetch an User using his identifier (not mandatory !), if omitted, all the Users are returned."
                args:
                    id:
                        type: "Int"
                        description: "The identifier of an User"
                    username:
                        type: "String"
                        description: "The username of an User (Can't be associated with the identifier)"
                    email:
                        type: "String"
                        description: "The Emails of an User (Can't be associated with the identifier)"
                resolve: "@=service('UserResolver').getUsers(args)"
            badge:
                type: "[Badge]"
                description: "Allow to fetch a Badge using his identifier (not mandatory !), if omitted, all the Badges are returned."
                args:
                    id:
                        type: "Int"
                        description: "The identifier of the Badge"
                resolve: "@=resolver('badge_resolver', [args])"
            path:
                type: "[Path]"
                description: "Allow to fetch a Path using his identifier (not mandatory !), if omitted, all the Paths are returned."
                args:
                    id:
                        type: "Int"
                        description: "The identifier of the Path"
                resolve: "@=resolver('path_resolver', [args])"
            location:
                type: "[Location]"
                description: "Allow to fetch a Location using his identifier (not mandatory !), if omitted, all the Locations are returned."
                args:
                    id:
                        type: "Int"
                        description: "The identifier of the Location"
                resolve: "@=resolver('location_resolver', [args])"
