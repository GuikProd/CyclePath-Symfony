version: 2
jobs:
    phpspec:
        docker:
            - image: circleci/php:7.1-fpm
        steps:
            - checkout
            - run: sudo composer self-update
            - restore_cache:
                keys:
                    - composer-v1-{{ checksum "composer.json" }}
                    - composer-v1-
            - run: composer install -n --optimize-autoloader --apcu-autoloader
            - run: composer dump-autoload --optimize --apcu
            - save_cache:
                key: composer-v1-{{ checksum "composer.json" }}
                paths:
                    - vendor
            - run: cp .env.dist .env
            - run: vendor/bin/phpspec run
    phpunit:
        docker:
            - image: circleci/php:7.1-fpm
            - image: redis
        steps:
            - checkout
            - run: sudo composer self-update
            - restore_cache:
                keys:
                    - composer-v1-{{ checksum "composer.json" }}
                    - composer-v1-
            - run: composer install -n --optimize-autoloader --apcu-autoloader
            - run: composer dump-autoload --optimize --apcu
            - save_cache:
                key: composer-v1-{{ checksum "composer.json" }}
                paths:
                    - vendor
            - run: cp .env.dist .env
            - run: ./bin/console d:d:c --env=test
            - run: ./bin/console d:s:c --env=test
            - run: vendor/bin/phpunit -v
            - run: rm -rf var/data.db
    behat_core:
        docker:
            - image: circleci/php:7.1-node-browsers
            - image: redis
        steps:
            - checkout
            - run: sudo composer self-update
            - restore_cache:
                keys:
                    - composer-v1-{{ checksum "composer.json" }}
                    - composer-v1-
            - run: composer install -n --optimize-autoloader --apcu-autoloader
            - run: composer dump-autoload --optimize --apcu
            - save_cache:
                key: composer-v1-{{ checksum "composer.json" }}
                paths:
                    - vendor
            - run: cp .env.dist .env
            - run: cp .env.behat.dist .env.behat
            - run: cp ./docker/CI/private.pem var/jwt/private.pem
            - run: cp ./docker/CI/public.pem var/jwt/public.pem
            - run: sudo yarn upgrade
            - run: yarn install
            - save_cache:
                key: node-v1-{{ checksum "package.json" }}
                paths:
                    - node_modules
            - run: ./node_modules/.bin/encore production
            - run: ./bin/console d:d:c --env=test
            - run: ./bin/console d:s:c --env=test
            - run: vendor/bin/behat --profile default
            - run: rm -rf var/data.db
    behat_graphql:
        docker:
            - image: circleci/php:7.1-node-browsers
            - image: redis
        steps:
            - checkout
            - run: sudo composer self-update
            - restore_cache:
                keys:
                    - composer-v1-{{ checksum "composer.json" }}
                    - composer-v1-
            - run: composer install -n --optimize-autoloader --apcu-autoloader
            - run: composer dump-autoload --optimize --apcu
            - save_cache:
                key: composer-v1-{{ checksum "composer.json" }}
                paths:
                    - vendor
            - run: cp .env.dist .env
            - run: cp .env.behat.dist .env.behat
            - run: cp ./docker/CI/private.pem var/jwt/private.pem
            - run: cp ./docker/CI/public.pem var/jwt/public.pem
            - run: ./bin/console d:d:c --env=test
            - run: ./bin/console d:s:c --env=test
            - run: vendor/bin/behat --profile graphql
            - run: rm -rf var/data.db
    encore:
         docker:
             - image: circleci/node:7.10.0
         steps:
             - checkout
             - run: sudo yarn upgrade
             - run: yarn install
             - save_cache:
                 key: node-v1-{{ checksum "package.json" }}
                 paths:
                     - node_modules
             - run: ./node_modules/.bin/encore production
    jest:
         docker:
             - image: circleci/node:7.10.0
         steps:
             - checkout
             - run: sudo yarn upgrade
             - run: yarn install
             - save_cache:
                 key: node-v1-{{ checksum "package.json" }}
                 paths:
                     - node_modules
             - run: ./node_modules/.bin/encore production
             - run: echo "Hello from test world !"
workflows:
    version: 2
    unit_and_spec:
        jobs:
            - phpspec
            - phpunit
            - behat_core
            - behat_graphql
    frontend:
        jobs:
            - encore
            - jest
